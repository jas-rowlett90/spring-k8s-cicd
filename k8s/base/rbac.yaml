---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spring-k8s-account
  namespace: default   # Explicitly setting default namespace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: service-reader
  namespace: default   # Explicitly setting default namespace
rules:
- apiGroups: [""]
  resources: ["services", "endpoints", "pods"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: service-reader-binding
  namespace: default   # Explicitly setting default namespace
subjects:
- kind: ServiceAccount
  name: spring-k8s-account
  namespace: default   # Explicitly setting default namespace
roleRef:
  kind: Role
  name: service-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ingress-nginx-role
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
      - services
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingress-nginx-binding
subjects:
- kind: ServiceAccount
  name: spring-k8s-account
  namespace: default    # Using default namespace
roleRef:
  kind: ClusterRole
  name: ingress-nginx-role
  apiGroup: rbac.authorization.k8s.io
